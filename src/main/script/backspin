#!/usr/bin/env bash
set -eux

# fun: entry-point "$@"
entry-point() {
	main "$@"
}

# fun: main SOURCE_DIR TARGET_DIR
main() {
	if [[ _-h == "_${1:-}" ]]; then
		print-usage
		return
	fi

	if [[ -z "${1:-}" ]]; then
		errcho 'source dir not specified, see backspin -h for usage'
		return 1
	fi

	if [[ -z "${2:-}" ]]; then
		errxit 'target dir not specified, see backspin -h for usage'
		return 1
	fi

	if [[ -n "${3:-}" ]]; then
		errcho 'too many arguments, see backspin -h for usage'
		return 1
	fi

	local source_dir="$1"
	if [[ ! -d "$source_dir" ]]; then
		errcho "source dir '$source_dir' not found"
		return 1
	fi

	local target_dir="$2"
	if [[ ! -d "$target_dir" ]]; then
		errcho "target dir '$target_dir' not found"
		return 1
	fi

	local now=$(date +%Y-%m-%d_%H-%M-%S)
	local counter=0
	local current_snapshot_base="$target_dir/backup_$now"
	local current_snapshot="$current_snapshot_base"
	while [[ -e "$current_snapshot" ]]; do
		let counter=$counter + 1
		if [[ $counter > 9 ]]; then
			errcho "something wrong: $current_snapshot exists"
			return 1
		fi
		current_snapshot="${current_snapshot_base}_$counter"
	done

	local previous_snapshot=$(last-dir "$target_dir")
	if [[ -n "$previous_snapshot" ]]; then
		rsync --verbose -a --delete "--link-dest=../$previous_snapshot" "$source_dir"  "$current_snapshot"
	else
		rsync --verbose -a --delete                                     "$source_dir"  "$current_snapshot"
	fi

	#rdfind "$target_dir" -makehardlinks true
}

print-usage() {
	echo 'usage: backspin <source_dir> <target_dir>'
}

# fun: errcho some message text
# txt: print message to stderr
errcho() {
	(>&2 echo "$@")
}

# txt: find last file name in directory
last-dir() {
	ls -1 -v --reverse "$@" | head -n 1
}

entry-point "$@"
